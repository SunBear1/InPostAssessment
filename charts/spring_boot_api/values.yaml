stage: dev

spring_boot_api:
  name: spring-boot-api
  namespace: spring
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  volumes:
    - name: config-volume
      configMap:
        name: spring-boot-api-cm
  container:
    name: main
    image: busybox:latest
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: 8080
      - containerPort: 8081
      - containerPort: 8082
    volumeMounts:
      - name: config-volume
        mountPath: /app
    envFrom:
      - secretRef:
          name: spring-boot-api-secret
    env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            fieldPath: status.podIP
    lifecycle:
      preStop:
        exec:
          command:
            - wget
            - http://localhost:8080/service/shutdown
    livenessProbe:
      httpGet:
        path: /api/v1/health/live
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 5
    readinessProbe:
      httpGet:
        path: /api/v1/health/ready
        port: 8080
      initialDelaySeconds: 5
      periodSeconds: 5
    resources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "250m"
        memory: "256Mi"
  terminationGracePeriodSeconds: 30

  config_map:
    data:
      cm_config:
        config.json: |
          {
            "animals": {
              "cow": "moo",
              "sheep": "beee",
              "pig": "oink"
            }
          }

  secret:
    data:
      username: "admin"
      password: "changeme"

  ingress:
    paths:
      - path: /api
        port: 8080
      - path: /logs
        port: 8081
      - path: /soap
        port: 8082